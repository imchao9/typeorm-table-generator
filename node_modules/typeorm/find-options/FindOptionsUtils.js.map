{"version":3,"sources":["../../src/find-options/FindOptionsUtils.ts"],"names":[],"mappings":"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","file":"FindOptionsUtils.js","sourcesContent":["import {FindOptions} from \"./FindOptions\";\nimport {QueryBuilder} from \"../query-builder/QueryBuilder\";\n\n/**\n * Utilities to work with FindOptions.\n */\nexport class FindOptionsUtils {\n\n    /**\n     * Checks if given object is really instance of FindOptions interface.\n     */\n    static isFindOptions(object: any): object is FindOptions {\n        const possibleOptions: FindOptions = object;\n        return  possibleOptions && !!possibleOptions.alias && typeof possibleOptions.alias === \"string\" && (\n                    !!possibleOptions.limit ||\n                    !!possibleOptions.offset ||\n                    !!possibleOptions.firstResult ||\n                    !!possibleOptions.maxResults ||\n                    !!possibleOptions.where ||\n                    !!possibleOptions.having ||\n                    !!possibleOptions.whereConditions ||\n                    !!possibleOptions.havingConditions ||\n                    !!possibleOptions.orderBy ||\n                    !!possibleOptions.groupBy ||\n                    !!possibleOptions.leftJoinAndSelect ||\n                    !!possibleOptions.innerJoinAndSelect ||\n                    !!possibleOptions.leftJoin ||\n                    !!possibleOptions.innerJoin ||\n                    !!possibleOptions.parameters ||\n                    !!possibleOptions.enabledOptions\n                );\n    }\n\n    /**\n     * Applies give find options to the given query builder.\n     */\n    static applyOptionsToQueryBuilder(qb: QueryBuilder<any>, options: FindOptions): QueryBuilder<any> {\n\n        if (options.limit)\n            qb.setLimit(options.limit);\n        if (options.offset)\n            qb.setOffset(options.offset);\n        if (options.firstResult)\n            qb.setFirstResult(options.firstResult);\n        if (options.maxResults)\n            qb.setMaxResults(options.maxResults);\n        if (options.where)\n            qb.where(options.where);\n        if (options.having)\n            qb.having(options.having);\n\n        if (options.whereConditions) {\n            Object.keys(options.whereConditions).forEach((key, index) => {\n                const name = key.indexOf(\".\") === -1 ? options.alias + \".\" + key : key;\n                if (options.whereConditions![key] === null) {\n                    qb.andWhere(name + \" IS NULL\");\n\n                } else {\n                    const parameterName = \"whereConditions_\" + index;\n                    qb.andWhere(name + \"=:\" + parameterName, { [parameterName]: options.whereConditions![key] });\n                }\n            });\n        }\n\n        if (options.havingConditions) {\n            Object.keys(options.havingConditions).forEach((key, index) => {\n                const name = key.indexOf(\".\") === -1 ? options.alias + \".\" + key : key;\n                if (options.havingConditions![key] === null) {\n                    qb.andHaving(name + \" IS NULL\");\n\n                } else {\n                    const parameterName = \"havingConditions_\" + index;\n                    qb.andHaving(name + \"=:\" + parameterName, { [parameterName]: options.whereConditions![key] });\n                }\n            });\n        }\n\n        if (options.orderBy)\n            Object.keys(options.orderBy).forEach(columnName => qb.addOrderBy(columnName, options.orderBy![columnName]));\n\n        if (options.groupBy)\n            options.groupBy.forEach(groupBy => qb.addGroupBy(groupBy));\n\n        if (options.leftJoin)\n            Object.keys(options.leftJoin).forEach(key => {\n                if (options.leftJoin) // this check because of tsc bug\n                    qb.leftJoin(options.leftJoin[key], key);\n            });\n\n        if (options.innerJoin)\n            Object.keys(options.innerJoin).forEach(key => {\n                if (options.innerJoin) // this check because of tsc bug\n                    qb.innerJoin(options.innerJoin[key], key);\n            });\n\n        if (options.leftJoinAndSelect)\n            Object.keys(options.leftJoinAndSelect).forEach(key => {\n                if (options.leftJoinAndSelect) // this check because of tsc bug\n                    qb.leftJoinAndSelect(options.leftJoinAndSelect[key], key);\n            });\n\n        if (options.innerJoinAndSelect)\n            Object.keys(options.innerJoinAndSelect).forEach(key => {\n                if (options.innerJoinAndSelect) // this check because of tsc bug\n                    qb.innerJoinAndSelect(options.innerJoinAndSelect[key], key);\n            });\n\n        if (options.parameters)\n            qb.setParameters(options.parameters);\n\n        if (options.enabledOptions) {\n            options.enabledOptions.forEach(option => {\n                qb.enableOption(option);\n            });\n        }\n\n        return qb;\n    }\n\n}"],"sourceRoot":".."}