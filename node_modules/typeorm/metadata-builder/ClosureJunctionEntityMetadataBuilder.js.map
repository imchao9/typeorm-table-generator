{"version":3,"sources":["../../src/metadata-builder/ClosureJunctionEntityMetadataBuilder.ts"],"names":[],"mappings":";;AAAA,6DAA0D;AAE1D,6DAA0D;AAE1D,qEAAkE;AAClE,2DAAwD;AAExD,6DAA0D;AAc1D;;GAEG;AACH;IAAA;IA8DA,CAAC;IA5DG,oDAAK,GAAL,UAAM,MAAc,EAAE,oBAA0C,EAAE,IAA8C;QAE5G,IAAM,OAAO,GAAG;YACZ,IAAI,+BAAc,CAAsB;gBACpC,MAAM,EAAE,aAAa;gBACrB,YAAY,EAAE,aAAa;gBAC3B,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;gBACrC,IAAI,EAAE,SAAS;gBACf,OAAO,EAAkB;oBACrB,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;oBACjC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;oBAC7B,IAAI,EAAE,UAAU;iBACnB;aACJ,CAAC;YACF,IAAI,+BAAc,CAAsB;gBACpC,MAAM,EAAE,aAAa;gBACrB,YAAY,EAAE,aAAa;gBAC3B,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;gBACrC,IAAI,EAAE,SAAS;gBACf,OAAO,EAAkB;oBACrB,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;oBACjC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;oBAC7B,IAAI,EAAE,YAAY;iBACrB;aACJ,CAAC;SACL,CAAC;QAEF,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1B,OAAO,CAAC,IAAI,CAAC,IAAI,+BAAc,CAAsB;gBACjD,MAAM,EAAE,aAAa;gBACrB,YAAY,EAAE,aAAa;gBAC3B,YAAY,EAAE,yBAAW,CAAC,OAAO;gBACjC,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE;oBACL,IAAI,EAAE,yBAAW,CAAC,OAAO;oBACzB,IAAI,EAAE,OAAO;iBAChB;aACJ,CAAC,CAAC,CAAC;QACR,CAAC;QAED,IAAM,4BAA4B,GAAG,IAAI,6BAAa,CAAC;YACnD,MAAM,EAAE,aAAa;YACrB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;YACrB,IAAI,EAAE,kBAAkB;SAC3B,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,+BAAc,CAAC;YACtB,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,aAAa;YACrB,YAAY,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY;YACzC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,aAAa,EAAE,4BAA4B;YAC3C,eAAe,EAAE,OAAO;YACxB,mBAAmB,EAAE;gBACjB,IAAI,uCAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACtE,IAAI,uCAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACzE;SACJ,EAAE,oBAAoB,CAAC,CAAC;IAC7B,CAAC;IAEL,2CAAC;AAAD,CA9DA,AA8DC,IAAA;AA9DY,oFAAoC","file":"ClosureJunctionEntityMetadataBuilder.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {NamingStrategyInterface} from \"../naming-strategy/NamingStrategyInterface\";\nimport {ColumnMetadata} from \"../metadata/ColumnMetadata\";\nimport {ColumnOptions} from \"../decorator/options/ColumnOptions\";\nimport {ForeignKeyMetadata} from \"../metadata/ForeignKeyMetadata\";\nimport {TableMetadata} from \"../metadata/TableMetadata\";\nimport {ColumnMetadataArgs} from \"../metadata-args/ColumnMetadataArgs\";\nimport {ColumnTypes} from \"../metadata/types/ColumnTypes\";\nimport {LazyRelationsWrapper} from \"../lazy-loading/LazyRelationsWrapper\";\nimport {Driver} from \"../driver/Driver\";\n\n/**\n * Helps to create EntityMetadatas for junction tables.\n */\nexport interface ClosureJunctionEntityMetadataBuilderArgs {\n    namingStrategy: NamingStrategyInterface;\n    table: TableMetadata;\n    primaryColumn: ColumnMetadata;\n    hasTreeLevelColumn: boolean;\n}\n\n/**\n * Helps to create EntityMetadatas for junction tables for closure tables.\n */\nexport class ClosureJunctionEntityMetadataBuilder {\n\n    build(driver: Driver, lazyRelationsWrapper: LazyRelationsWrapper, args: ClosureJunctionEntityMetadataBuilderArgs) {\n\n        const columns = [\n            new ColumnMetadata(<ColumnMetadataArgs> {\n                target: \"__virtual__\",\n                propertyName: \"__virtual__\",\n                propertyType: args.primaryColumn.type,\n                mode: \"virtual\",\n                options: <ColumnOptions> {\n                    length: args.primaryColumn.length,\n                    type: args.primaryColumn.type,\n                    name: \"ancestor\"\n                }\n            }),\n            new ColumnMetadata(<ColumnMetadataArgs> {\n                target: \"__virtual__\",\n                propertyName: \"__virtual__\",\n                propertyType: args.primaryColumn.type,\n                mode: \"virtual\",\n                options: <ColumnOptions> {\n                    length: args.primaryColumn.length,\n                    type: args.primaryColumn.type,\n                    name: \"descendant\"\n                }\n            })\n        ];\n\n        if (args.hasTreeLevelColumn) {\n            columns.push(new ColumnMetadata(<ColumnMetadataArgs> {\n                target: \"__virtual__\",\n                propertyName: \"__virtual__\",\n                propertyType: ColumnTypes.INTEGER,\n                mode: \"virtual\",\n                options: {\n                    type: ColumnTypes.INTEGER,\n                    name: \"level\"\n                }\n            }));\n        }\n\n        const closureJunctionTableMetadata = new TableMetadata({\n            target: \"__virtual__\",\n            name: args.table.name,\n            type: \"closure-junction\"\n        });\n\n        return new EntityMetadata({\n            junction: true,\n            target: \"__virtual__\",\n            tablesPrefix: driver.options.tablesPrefix,\n            namingStrategy: args.namingStrategy,\n            tableMetadata: closureJunctionTableMetadata,\n            columnMetadatas: columns,\n            foreignKeyMetadatas: [\n                new ForeignKeyMetadata([columns[0]], args.table, [args.primaryColumn]),\n                new ForeignKeyMetadata([columns[1]], args.table, [args.primaryColumn])\n            ]\n        }, lazyRelationsWrapper);\n    }\n\n}"],"sourceRoot":".."}