{"version":3,"sources":["../../src/decorator/columns/CreateDateColumn.ts"],"names":[],"mappings":";;AACA,gEAA6D;AAC7D,qCAAmD;AAGnD;;;;GAIG;AACH,0BAAiC,OAAuB;IACpD,MAAM,CAAC,UAAU,MAAc,EAAE,YAAoB;QAEjD,qHAAqH;QAErH,kEAAkE;QAClE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YAAC,OAAO,GAAG,EAAmB,CAAC;QAE5C,wFAAwF;QACxF,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,yBAAW,CAAC,QAAQ,EAAmB,EAAE,OAAO,CAAC,CAAC;QAElF,4CAA4C;QAC5C,IAAM,IAAI,GAAuB;YAC7B,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,+BAA+B;YAC/B,IAAI,EAAE,YAAY;YAClB,OAAO,EAAE,OAAO;SACnB,CAAC;QACF,8BAAsB,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC;AACN,CAAC;AArBD,4CAqBC","file":"CreateDateColumn.js","sourcesContent":["import {ColumnOptions} from \"../options/ColumnOptions\";\nimport {ColumnTypes} from \"../../metadata/types/ColumnTypes\";\nimport {getMetadataArgsStorage} from \"../../index\";\nimport {ColumnMetadataArgs} from \"../../metadata-args/ColumnMetadataArgs\";\n\n/**\n * This column will store a creation date of the inserted object.\n * Creation date is generated and inserted only once,\n * at the first time when you create an object, the value is inserted into the table, and is never touched again.\n */\nexport function CreateDateColumn(options?: ColumnOptions): Function {\n    return function (object: Object, propertyName: string) {\n\n        // const reflectedType = ColumnTypes.typeToString((Reflect as any).getMetadata(\"design:type\", object, propertyName));\n\n        // if column options are not given then create a new empty options\n        if (!options) options = {} as ColumnOptions;\n\n        // implicitly set a type, because this column's type cannot be anything else except date\n        options = Object.assign({ type: ColumnTypes.DATETIME } as ColumnOptions, options);\n\n        // create and register a new column metadata\n        const args: ColumnMetadataArgs = {\n            target: object.constructor,\n            propertyName: propertyName,\n            // propertyType: reflectedType,\n            mode: \"createDate\",\n            options: options\n        };\n        getMetadataArgsStorage().columns.add(args);\n    };\n}\n\n"],"sourceRoot":"../.."}