{"version":3,"sources":["../../src/query-builder/alias/AliasMap.ts"],"names":[],"mappings":"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","file":"AliasMap.js","sourcesContent":["import {EntityMetadata} from \"../../metadata/EntityMetadata\";\nimport {Alias} from \"./Alias\";\nimport {Connection} from \"../../connection/Connection\";\n\n/**\n */\nexport class AliasMap {\n\n    // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n\n    aliases: Alias[] = [];\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(private connection: Connection) {\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    addMainAlias(alias: Alias) {\n        if (this.hasMainAlias)\n            this.aliases.splice(this.aliases.indexOf(this.mainAlias), 1);\n\n        alias.isMain = true;\n        this.aliases.push(alias);\n    }\n\n    addAlias(alias: Alias) {\n        this.aliases.push(alias);\n    }\n\n    get hasMainAlias() {\n        return !!this.aliases.find(alias => alias.isMain);\n    }\n\n    get mainAlias() {\n        const alias = this.aliases.find(alias => alias.isMain);\n        if (!alias)\n            throw new Error(`Main alias is not set.`);\n\n        return alias;\n    }\n\n    findAliasByName(name: string) {\n        return this.aliases.find(alias => alias.name === name);\n    }\n\n    findAliasByParent(parentAliasName: string, parentPropertyName: string) {\n        return this.aliases.find(alias => {\n            return alias.parentAliasName === parentAliasName && alias.parentPropertyName === parentPropertyName;\n        });\n    }\n\n    getEntityMetadataByAlias(alias: Alias): EntityMetadata|undefined {\n        if (alias.target) {\n            // todo: use connection.getMetadata instead?\n            return this.connection.getMetadata(alias.target);\n\n        } else if (alias.parentAliasName && alias.parentPropertyName) {\n\n            const parentAlias = this.findAliasByName(alias.parentAliasName);\n            if (!parentAlias)\n                throw new Error(`Alias \"${alias.parentAliasName}\" was not found`);\n\n            const parentEntityMetadata = this.getEntityMetadataByAlias(parentAlias);\n            if (!parentEntityMetadata)\n                throw new Error(\"Cannot get entity metadata for the given alias \" + alias.name);\n\n            if (!parentEntityMetadata.hasRelationWithPropertyName(alias.parentPropertyName))\n                throw new Error(\"Relation metadata for \" + alias.parentAliasName + \"#\" + alias.parentPropertyName + \" was not found.\");\n\n            const relation = parentEntityMetadata.findRelationWithPropertyName(alias.parentPropertyName);\n            return relation.inverseEntityMetadata;\n        }\n\n        return undefined;\n    }\n\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n\n}"],"sourceRoot":"../.."}