{"version":3,"sources":["../../src/commands/MigrationRevertCommand.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kCAA0C;AAE1C;;GAEG;AACH;IAAA;QAEI,YAAO,GAAG,mBAAmB,CAAC;QAC9B,aAAQ,GAAG,kCAAkC,CAAC;IAuClD,CAAC;IArCG,wCAAO,GAAP,UAAQ,KAAU;QACd,MAAM,CAAC,KAAK;aACP,MAAM,CAAC,GAAG,EAAE;YACT,KAAK,EAAE,YAAY;YACnB,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,8CAA8C;SAC3D,CAAC;aACD,MAAM,CAAC,IAAI,EAAE;YACV,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,gBAAgB;YACzB,QAAQ,EAAE,iDAAiD;SAC9D,CAAC,CAAC;IACX,CAAC;IAEK,wCAAO,GAAb,UAAc,IAAS;;;;;;;wBAGf,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC;wBACxC,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,IAAI,CAAC;wBACzB,qBAAM,wBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,EAAA;;qCAA1E,SAA0E;;;;wBAGzF,qBAAM,UAAU,CAAC,iBAAiB,EAAE,EAAA;;wBAApC,SAAoC,CAAC;;;;wBAGrC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,KAAG,CAAC,CAAC;;4BAGpC,qBAAM,UAAU,CAAC,KAAK,EAAE,EAAA;;wBAAxB,SAAwB,CAAC;;;;;wBAI7B,OAAO,CAAC,KAAK,CAAC,KAAG,CAAC,CAAC;wBACnB,MAAM,KAAG,CAAC;;;;;KAEjB;IAEL,6BAAC;AAAD,CA1CA,AA0CC,IAAA;AA1CY,wDAAsB","file":"MigrationRevertCommand.js","sourcesContent":["import {createConnection} from \"../index\";\n\n/**\n * Reverts last migration command.\n */\nexport class MigrationRevertCommand {\n\n    command = \"migrations:revert\";\n    describe = \"Reverts last executed migration.\";\n\n    builder(yargs: any) {\n        return yargs\n            .option(\"c\", {\n                alias: \"connection\",\n                default: \"default\",\n                describe: \"Name of the connection on which run a query.\"\n            })\n            .option(\"cf\", {\n                alias: \"config\",\n                default: \"ormconfig.json\",\n                describe: \"Name of the file with connection configuration.\"\n            });\n    }\n\n    async handler(argv: any) {\n\n        try {\n            process.env.SKIP_SCHEMA_CREATION = true;\n            process.env.SKIP_SUBSCRIBERS_LOADING = true;\n            const connection = await createConnection(argv.connection, process.cwd() + \"/\" + argv.config);\n\n            try {\n                await connection.undoLastMigration();\n\n            } catch (err) {\n                connection.logger.log(\"error\", err);\n\n            } finally {\n                await connection.close();\n            }\n\n        } catch (err) {\n            console.error(err);\n            throw err;\n        }\n    }\n\n}"],"sourceRoot":".."}