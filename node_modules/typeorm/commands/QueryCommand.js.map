{"version":3,"sources":["../../src/commands/QueryCommand.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kCAA0C;AAG1C;;GAEG;AACH;IAAA;QACI,YAAO,GAAG,OAAO,CAAC;QAClB,aAAQ,GAAG,kHAAkH,CAAC;IAoClI,CAAC;IAlCG,8BAAO,GAAP,UAAQ,KAAU;QACd,MAAM,CAAC,KAAK;aACP,MAAM,CAAC,GAAG,EAAE;YACT,KAAK,EAAE,YAAY;YACnB,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,iDAAiD;SAC9D,CAAC;aACD,MAAM,CAAC,IAAI,EAAE;YACV,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,gBAAgB;YACzB,QAAQ,EAAE,iDAAiD;SAC9D,CAAC,CAAC;IACX,CAAC;IAEK,8BAAO,GAAb,UAAc,IAAS;;4BAGf,WAAW;;;;wBAFf,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC;wBACrB,qBAAM,wBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,EAAA;;qCAA1E,SAA0E;sCACpD,SAAS;;;;wBAEhC,qBAAM,UAAU,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAA;;wBAAzD,WAAW,GAAG,SAA2C,CAAC;wBACtC,qBAAM,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAA;;sCAAlC,SAAkC;wBACtD,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,0BAA0B,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;;;;wBAGxF,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,KAAG,CAAC,CAAC;wBACpC,MAAM,KAAG,CAAC;;6BAGN,WAAW,EAAX,wBAAW;wBACX,qBAAM,WAAW,CAAC,OAAO,EAAE,EAAA;;wBAA3B,SAA2B,CAAC;;4BAEhC,qBAAM,UAAU,CAAC,KAAK,EAAE,EAAA;;wBAAxB,SAAwB,CAAC;;;;;;KAEhC;IACL,mBAAC;AAAD,CAtCA,AAsCC,IAAA;AAtCY,oCAAY","file":"QueryCommand.js","sourcesContent":["import {createConnection} from \"../index\";\nimport {QueryRunner} from \"../query-runner/QueryRunner\";\n\n/**\n * Executes an sql query on the given connection.\n */\nexport class QueryCommand {\n    command = \"query\";\n    describe = \"Executes given SQL query on a default connection. Specify connection name to run query on a specific connection.\";\n\n    builder(yargs: any) {\n        return yargs\n            .option(\"c\", {\n                alias: \"connection\",\n                default: \"default\",\n                describe: \"Name of the connection on which to run a query.\"\n            })\n            .option(\"cf\", {\n                alias: \"config\",\n                default: \"ormconfig.json\",\n                describe: \"Name of the file with connection configuration.\"\n            });\n    }\n\n    async handler(argv: any) {\n        process.env.SKIP_SCHEMA_CREATION = true;\n        const connection = await createConnection(argv.connection, process.cwd() + \"/\" + argv.config);\n        let queryRunner: QueryRunner|undefined = undefined;\n        try {\n            queryRunner = await connection.driver.createQueryRunner();\n            const queryResult = await queryRunner.query(argv._[1]);\n            connection.logger.log(\"info\", \"Query executed. Result: \" + JSON.stringify(queryResult));\n\n        } catch (err) {\n            connection.logger.log(\"error\", err);\n            throw err;\n\n        } finally {\n            if (queryRunner)\n                await queryRunner.release();\n\n            await connection.close();\n        }\n    }\n}"],"sourceRoot":".."}